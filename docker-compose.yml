version: "3.8"
services:
  traefik:
    restart: "unless-stopped"
    image: "traefik:v2.2"
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.traefik.me`)"
      - "traefik.http.routers.traefik-tls.tls.domains[0].main=traefik.traefik.me"
      - "traefik.http.routers.traefik-tls.tls.domains[0].sans=traefik-*.traefik.me"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - "./config/traefik.yml:/etc/traefik/traefik.yml"
      - "./config/tls.yml:/etc/traefik/tls.yml"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "certs:/etc/ssl/traefik"

  mongodb:
    image: mongo:latest
    restart: "unless-stopped"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: KSJ
    ports:
      - 27017:27017
    volumes:
      - ./mongodata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    labels:
      - "traefik.enable=false"

  back:
    build:
      context: "back/."
      dockerfile: "Dockerfile"
    restart: "unless-stopped"
    labels:
      # the most import label to tell traefik that it should pick up this service
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`back.traefik.me`)"
      - "traefik.http.routers.back-tls.tls.domains[0].main=back.traefik.me"
      - "traefik.http.routers.back-tls.tls.domains[0].sans=back-*.traefik.me"
      - "traefik.http.services.back.loadbalancer.server.port=4000"

  front:
    build: 
      context: "."
      dockerfile: "angular.Dockerfile"
    restart: "unless-stopped"
    labels:
      # the most import label to tell traefik that it should pick up this service
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`front.traefik.me`)"
      - "traefik.http.routers.front-tls.tls.domains[0].main=front.traefik.me"
      - "traefik.http.routers.front-tls.tls.domains[0].sans=front-*.traefik.me"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.secHeaders.headers.accesscontrolallowheaders=*"

  reverse-proxy-https-helper-dev:
    image: alpine:3.9.2
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - "certs:/etc/ssl/traefik"
    labels:
      - "traefik.enable=false"

volumes:
  certs: